TODO XSH2:

- support name-like and XPath expressions for rename
- split [after|before] ...
- split text on a given character???


- loose parsing of xpath in assignment and count: allow $a - 1
- swap nodes command (maybe reorder: reorder {(2,1,3,4)} //foo) ?
  now doable with sort:
    $neword = {my $i=0; { map { $i => $_ } (2,1,3,4)} };
    xmove &{ sort :k {$neword{position()}} //foo } replace //foo;

- MORE TESTS

* document the installation process for ActiveState perl
* support DTD modification (isn't that obsolete in 21st century?)
* 'locate' - allow use also nearest id() (needs support in LibXML)

- document different examples for using namespaces:

	if the ttt prefix is aready declared in the context of ., you may
	simply do 

	add element ttt:para into . 
	and the new element ttt:para will be bound with that namespace so
	doing
	  ls //ttt:para;
	  ls//*[local-name()='ttt' and namespace-uri()='http://myuri.com'];
	should both list it.

	  add --namespace http://myuri.com into element "ttt:para" into .
	is intended for adding a new element together with a
	xmlns declaration of its prefix and the given namespace.

- namespace-rename-uri uri new-prefix [nodes]
- namespace-rename-prefix old-prefix new-prefix [nodes]
- namespace-change-uri old-uri new-uri [nodes]

USER-LEVEL IMPLEMENTABLE

- untag/split element                //(on user-level easy with def)
- comment-out node (?? uncomment ??) //(on user-level easy with def)

